version: '3'

services:

    web:
        build: ./frontend
        container_name: micro-videos-web
        restart: always
        tty: true
        environment:
            - NODE_ENV=development
        ports:
            - "3000:3000"
        volumes:
            - ./frontend:/app
            - /app/node_modules
        networks:
            - app-network
        depends_on:
            - app

    app:
        build: ./backend
        container_name: micro-videos-app
        entrypoint: dockerize -wait tcp://db:3306 -timeout 40s /var/www/entrypoint.sh
        volumes:
            - ./backend:/var/www
        networks:
            - app-network
        depends_on:
            - db
            - redis

    nginx:
        build: .docker/nginx
        container_name: micro-videos-nginx
        restart: always
        tty: true
        ports:
            - "8000:80"
        volumes:
            - ./backend:/var/www
        networks:
            - app-network
        depends_on:
            - app

    db:
        image: mysql:5.7
        command: --innodb-use-native-aio=0
        container_name: micro-videos-db
        restart: always
        tty: true
        ports:
            - "33006:3306"
        volumes:
            - ./.docker/dbdata:/var/lib/mysql
            - ./.docker/mysql:/docker-entrypoint-initdb.d
        environment:
            - MYSQL_ROOT_PASSWORD=root
            - MYSQL_USER=root
        networks:
            - app-network

    redis:
        image: redis:alpine
        container_name: micro-videos-redis
        expose:
            - 6379
        networks:
            - app-network

networks:
    app-network:
        driver: bridge
